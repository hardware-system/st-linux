// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
 * Copyright (C) STMicroelectronics 2022 - All Rights Reserved
 * Author: Alexandre Torgue <alexandre.torgue@foss.st.com> for STMicroelectronics.
 */

/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/input/linux-event-codes.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/rtc/rtc-stm32.h>
#include "stm32mp133.dtsi"
#include "stm32mp13xd.dtsi"
#include "stm32mp13-pinctrl-ici.dtsi"
#include <dt-bindings/usb/pd.h>
#include <dt-bindings/pwm/pwm.h>

/ {
	model = "STM32MP131D-ICI Discovery Board";
	compatible = "st,stm32mp1351-ici", "st,stm32mp131";

	aliases {
		ethernet0 = &eth1;
		serial0 = &uart4;
		serial1 = &usart2;
		serial2 = &usart3;
		serial3 = &uart5;
		serial4 = &uart7;
		serial5 = &usart6;
	};

	chosen {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;
		stdout-path = "serial0:115200n8";
	};

	clocks {
		clk_mco1: clk-mco1 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <24000000>;
		};
	};

	memory@c0000000 {
		device_type = "memory";
		reg = <0xc0000000 0x20000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		optee_reserved@dc000000 {
			reg = <0xdc000000 0x2000000>;
			no-map;
		};
		optee@de000000 {
			reg = <0xde000000 0x2000000>;
			no-map;
		};
	};

	wiegands-in {
		compatible = "bohai-wiegand-in";
		pinctrl-names = "default";
		status = "okay";

		channel_0 {
			data0_gpios = <&gpioh 8 GPIO_ACTIVE_LOW>;
			data1_gpios = <&gpioe 1 GPIO_ACTIVE_LOW>;
		};

		channel_1 {
			data0_gpios = <&gpiob 7 GPIO_ACTIVE_LOW>;
			data1_gpios = <&gpioe 14 GPIO_ACTIVE_LOW>;
		};

		channel_2 {
			data0_gpios = <&gpioe 0 GPIO_ACTIVE_LOW>;
			data1_gpios = <&gpioa 9 GPIO_ACTIVE_LOW>;
		};

		channel_3 {
			data0_gpios = <&gpiob 6 GPIO_ACTIVE_LOW>;
			data1_gpios = <&gpiod 11 GPIO_ACTIVE_LOW>;
		};
	};

	input0 {
		compatible = "gpio-keys-polled";
		poll-interval = <50>;  // 定义轮询间隔，单位为毫秒

		key0 {
            label = "GPIO Key 0";
            linux,code = <KEY_0>;
            gpios = <&gpiof 6 GPIO_ACTIVE_LOW>;
            debounce-interval = <2>;  // 消抖时间
        };
	};

	input1 {
		compatible = "gpio-keys-polled";
		poll-interval = <50>;

		key1 {
            label = "GPIO Key 1";
            linux,code = <KEY_1>;
            gpios = <&gpiof 7 GPIO_ACTIVE_LOW>;
            debounce-interval = <2>;
        };
	};

	input2 {
		compatible = "gpio-keys-polled";
		poll-interval = <50>;

		key2 {
            label = "GPIO Key 2";
            linux,code = <KEY_2>;
            gpios = <&gpioe 6 GPIO_ACTIVE_LOW>;
            debounce-interval = <2>;
        };
	};

	input3 {
		compatible = "gpio-keys-polled";
		poll-interval = <50>;

		key3 {
            label = "GPIO Key 3";
            linux,code = <KEY_3>;
            gpios = <&gpiog 1 GPIO_ACTIVE_LOW>;
            debounce-interval = <2>;
        };
	};

	// power-loss-detector {
	// 	compatible = "ici,power-loss-detector";
	// 	control-gpios = <&gpiof 14 GPIO_ACTIVE_LOW>;
	// 	interrupt-parent = <&gpiog>;
	// 	interrupts = <3 IRQ_TYPE_EDGE_FALLING>;     // 下降沿触发中断
	// };

	vddcore: vddcore {
        compatible = "regulator-fixed";
        regulator-name = "vddcore";
        regulator-min-microvolt = <1250000>;
        regulator-max-microvolt = <1250000>;
        regulator-off-in-suspend;
        regulator-always-on;
	};

	vddcpu: vddcpu {
		compatible = "regulator-fixed";
		regulator-name = "vddcpu";
		regulator-min-microvolt = <1350000>;
		regulator-max-microvolt = <1350000>;
        regulator-off-in-suspend;
        regulator-always-on;
	};

	v3v3: v3v3 {
        compatible = "regulator-fixed";
        regulator-name = "v3v3";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
        regulator-off-in-suspend;
        regulator-always-on;
    };

	vbus_otg: vbus_otg {
        compatible = "regulator-fixed";
        regulator-name = "vbus_otg";
        regulator-min-microvolt = <5000000>;
        regulator-max-microvolt = <5000000>;
        regulator-off-in-suspend;
		regulator-always-on;
    };

	vdd: vdd {
        compatible = "regulator-fixed";
        regulator-name = "vdd";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
        regulator-off-in-suspend;
        regulator-always-on;
    };

	vdd_usb: vdd_usb {
        compatible = "regulator-fixed";
        regulator-name = "vdd_usb";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
        regulator-off-in-suspend;
        regulator-always-on;
    };
};
&crc1 {
	status = "okay";
};

&dts {
	status = "okay";
};

&eth1 {
	status = "okay";
	pinctrl-0 = <&eth1_rmii_pins_a>;
	pinctrl-1 = <&eth1_rmii_sleep_pins_a>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rmii";
	max-speed = <100>;
	phy-handle = <&phy0_eth1>;
	nvmem-cells = <&ethernet_mac1_address>;
	nvmem-cell-names = "mac-address";

	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy0_eth1: ethernet-phy@1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reset-gpios =  <&gpioa 6 GPIO_ACTIVE_LOW>;
			reg = <1>;
		};
	};
};

&iwdg2 {
	timeout-sec = <86400>;
	status = "okay";
};

&rtc {
	status = "okay";
};

&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a &sdmmc1_clk_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a &sdmmc1_clk_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpiof 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	st,neg-edge;
 	no-1-8-v;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
};

/* EMMC */
&sdmmc2 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_b4_b7_pins_a &sdmmc2_clk_pins_a>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_b4_b7_od_pins_a &sdmmc2_clk_pins_a>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_b4_b7_sleep_pins_a>;
	non-removable;
	st,neg-edge;
 	mmc-ddr-3_3v;
 	no-1-8-v;
	bus-width = <8>;
	vmmc-supply = <&v3v3>;
	keep-power-in-suspend;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
};

&timers4 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";

	pwm4:pwm {
		pinctrl-0 = <&pwm4_pins_a>;
		pinctrl-1 = <&pwm4_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};

	timer@3 {
		status = "okay";
	};
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&usart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&usart2_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&usart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&usart3_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins_a>;
    uart-has-rtscts;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&usart6 {
	pinctrl-names = "default";
	pinctrl-0 = <&usart6_pins_a>;
    uart-has-rtscts;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart7_pins_a>;
    uart-has-rtscts;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&m_can1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&m_can1_pins_a>;
	pinctrl-1 = <&m_can1_sleep_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&usbh_ohci {
	phys = <&usbphyc_port0>;
	phy-names = "usb";
	status = "okay";
};

&usbh_ehci {
	phys = <&usbphyc_port0>;
	status = "okay";
};

&usbotg_hs {
	phys = <&usbphyc_port1 0>;
	phy-names = "usb2-phy";
	dr_mode = "otg";
	pinctrl-0 = <&usbotg_hs_pins_a>;
	pinctrl-names = "default";
	vbus-supply = <&vbus_otg>;
	status = "okay";
};

&usbphyc {
	status = "okay";
};

&usbphyc_port0 {
	phy-supply = <&vdd_usb>;

	st,current-boost-microamp = <1000>;
	st,decrease-hs-slew-rate;
	st,tune-hs-dc-level = <2>;
	st,enable-hs-rftime-reduction;
	st,trim-hs-current = <11>;
	st,trim-hs-impedance = <2>;
	st,tune-squelch-level = <1>;
	st,enable-hs-rx-gain-eq;
	st,no-hs-ftime-ctrl;
	st,no-lsfs-sc;
	/*
	 * Hack to keep hub active if wakeup source is enabled
	 * otherwise the hub will wakeup the port0 as soon as the v3v3_sw is disabled
	 */
	connector {
		compatible = "usb-a-connector";
		vbus-supply = <&vdd_usb>;
	};
};

&usbphyc_port1 {
	phy-supply = <&vdd_usb>;
	st,current-boost-microamp = <1000>;
	st,decrease-hs-slew-rate;
	st,tune-hs-dc-level = <2>;
	st,enable-hs-rftime-reduction;
	st,trim-hs-current = <11>;
	st,trim-hs-impedance = <2>;
	st,tune-squelch-level = <1>;
	st,enable-hs-rx-gain-eq;
	st,no-hs-ftime-ctrl;
	st,no-lsfs-sc;
};

&adc_2 {
	pinctrl-names = "default";
	pinctrl-0 = <&adc2_pins_a>;
	vdda-supply = <&vdd>;
	vref-supply = <&vdd>;
	status = "okay";

	adc2: adc@0 {
		status = "okay";

		channel@8 {
			reg = <8>;
			st,min-sample-time-ns = <5000>;
		};

		channel@7 {
			reg = <7>;
			st,min-sample-time-ns = <5000>;
		};

		channel@2 {
			reg = <2>;
			st,min-sample-time-ns = <5000>;
		};

		channel@0 {
			reg = <0>;
			st,min-sample-time-ns = <5000>;
		};

		channel@1 {
			reg = <1>;
			st,min-sample-time-ns = <5000>;
		};

		channel@5 {
			reg = <5>;
			st,min-sample-time-ns = <5000>;
		};

		channel@3 {
			reg = <3>;
			st,min-sample-time-ns = <5000>;
		};

		channel@9 {
			reg = <9>;
			st,min-sample-time-ns = <5000>;
		};
	};
};


&pinctrl {
	adc2_pins_a: adc2-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 11, ANALOG)>, /* ADC1 inp8 */
					<STM32_PINMUX('A', 0, ANALOG)>, /* ADC1 inp7 */
					<STM32_PINMUX('C', 1, ANALOG)>, /* ADC1 inp2 */
					<STM32_PINMUX('C', 0, ANALOG)>, /* ADC1 inp0 */
					<STM32_PINMUX('A', 2, ANALOG)>, /* ADC1 inp1 */
					<STM32_PINMUX('B', 1, ANALOG)>, /* ADC1 inp5 */
					<STM32_PINMUX('A', 1, ANALOG)>, /* ADC1 inp3 */
					<STM32_PINMUX('B', 0, ANALOG)>; /* ADC1 inp9 */
		};
	};

	eth1_rmii_pins_a: eth1-rmii-1 {
		pins1 {
			pinmux = <STM32_PINMUX('A', 11, AF11)>, /* ETH1_CLK */
					 <STM32_PINMUX('B', 11, AF11)>, /* ETH1_TX_EN */
					 <STM32_PINMUX('D', 7, AF10)>, /* ETH1_REF_CLK */
					 <STM32_PINMUX('G', 2, AF11)>, /* ETH1_MDC */
					 <STM32_PINMUX('G', 13, AF11)>, /* ETH1_TXD0 */
					 <STM32_PINMUX('G', 14, AF11)>; /* ETH1_TXD1 */
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('A', 7, AF11)>, /* ETH1_CRS_DV */
					 <STM32_PINMUX('C', 4, AF11)>, /* ETH1_RXD0 */
					 <STM32_PINMUX('C', 5, AF11)>; /* ETH1_RXD1 */
			bias-disable;
		};
		pins3 {
			pinmux = <STM32_PINMUX('G', 3, AF11)>; /* ETH1_MDIO */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	eth1_rmii_sleep_pins_a: eth1-rmii-sleep-1 {
		pins {
			pinmux = <STM32_PINMUX('A', 7, ANALOG)>, /* ETH1_CRS_DV */
					 <STM32_PINMUX('A', 11, ANALOG)>, /* ETH1_CLK */
					 <STM32_PINMUX('B', 11, ANALOG)>, /* ETH1_TX_EN */
					 <STM32_PINMUX('C', 4, ANALOG)>, /* ETH1_RXD0 */
					 <STM32_PINMUX('C', 5, ANALOG)>, /* ETH1_RXD1 */
					 <STM32_PINMUX('D', 7, ANALOG)>, /* ETH1_REF_CLK */
					 <STM32_PINMUX('G', 2, ANALOG)>, /* ETH1_MDC */
					 <STM32_PINMUX('G', 3, ANALOG)>, /* ETH1_MDIO */
					 <STM32_PINMUX('G', 13, ANALOG)>, /* ETH1_TXD0 */
					 <STM32_PINMUX('G', 14, ANALOG)>; /* ETH1_TXD1 */
		};
	};
};